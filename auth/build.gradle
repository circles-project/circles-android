apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'maven-publish'

android {
    namespace 'org.futo.circles.auth'
    compileSdk rootProject.ext.sdk_version

    defaultConfig {
        minSdk rootProject.ext.min_sdk_version
        targetSdk rootProject.ext.sdk_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        externalNativeBuild {
            cmake {
                cFlags += "-std=c11"
            }
        }
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
}

dependencies {
    implementation project(path: ':core')

    //ChromeTabs
    implementation "androidx.browser:browser:1.6.0"

    //Password strength
    implementation 'com.nulab-inc:zxcvbn:1.8.1'

    //Subscriptions
    implementation 'com.android.billingclient:billing-ktx:6.0.1'

    //QR
    implementation 'com.github.yuriy-budiyev:code-scanner:2.3.2'

    //Hilt
    implementation "com.google.dagger:hilt-android:$rootProject.ext.hilt_version"
    kapt "com.google.dagger:hilt-compiler:$rootProject.ext.hilt_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

kapt {
    correctErrorTypes = true
}

def groupIdString = "org.futo.circles"
def artifactIdString = "auth"

afterEvaluate {
    Properties properties = new Properties()
    if (rootProject.file("local.properties").exists()) {
        properties.load(rootProject.file("local.properties").newDataInputStream())
    }
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId groupIdString
                artifactId artifactIdString
                version rootProject.ext.modules_version
            }
        }
        repositories {
            maven {
                url "https://gitlab.futo.org/api/v4/projects/$rootProject.ext.modules_gitlab_projectId/packages/maven"
                name "GitLab"
                credentials(HttpHeaderCredentials) {
                    name = "Private-Token"
                    value = properties.getProperty("PUBLISH_TOKEN")
                }
                authentication {
                    header(HttpHeaderAuthentication)
                }
            }
        }
    }
}