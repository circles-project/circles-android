apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdk rootProject.ext.sdkVersion

    defaultConfig {
        applicationId "org.futo.circles"
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.sdkVersion
        versionCode 12
        versionName "1.0.11"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "boolean", "RAGESHAKE_ENABLED", "false"
        buildConfigField "boolean", "MEDIA_BACKUP_ENABLED", "false"
        buildConfigField "boolean", "IS_SUBSCRIPTIONS_ENABLED", "false"
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField "String", "US_SERVER_DOMAIN", "\"nl.circles-dev.net\""
            buildConfigField "String", "EU_SERVER_DOMAIN", "\"matrix.org\""
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "US_SERVER_DOMAIN", "\"circu.li\""
            buildConfigField "String", "EU_SERVER_DOMAIN", "\"eu.circu.li\""
        }
    }

    def flavor_dimension_name = "store"
    flavorDimensions flavor_dimension_name
    productFlavors {
        gplay {
            dimension flavor_dimension_name
        }
        fdroid {
            dimension flavor_dimension_name
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
        freeCompilerArgs += [
                "-opt-in=kotlinx.coroutines.FlowPreview",
                "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
        ]
    }
    namespace 'org.futo.circles'
}

dependencies {
    implementation project(path: ':core')
    implementation project(path: ':auth')

    //ExoPlayer
    implementation 'com.google.android.exoplayer:exoplayer:2.18.7'

    //Image zoom
    implementation 'com.jsibbold:zoomage:1.3.1'

    //Firebase
    gplayImplementation platform('com.google.firebase:firebase-bom:31.1.1')
    gplayImplementation 'com.google.firebase:firebase-crashlytics-ktx'
    gplayImplementation 'com.google.firebase:firebase-analytics-ktx'
    gplayImplementation 'com.google.firebase:firebase-messaging-ktx'

    // UnifiedPush
    implementation 'com.github.UnifiedPush:android-connector:2.1.1'

    //Emoji
    implementation "com.vanniktech:emoji-google:0.16.0"

    //QR
    implementation 'com.google.zxing:core:3.5.1'
    implementation 'com.github.yuriy-budiyev:code-scanner:2.3.2'

    //Webp animations
    implementation 'com.github.penfeizhou.android.animation:glide-plugin:2.24.0'

    // Custom shadow
    implementation 'com.github.BluRe-CN:ComplexView:1.1'

    //Markdown
    def markwon_version = "4.6.2"
    implementation "io.noties.markwon:core:$markwon_version"
    implementation "io.noties.markwon:linkify:$markwon_version"
    implementation "io.noties.markwon:ext-strikethrough:$markwon_version"
    implementation "io.noties.markwon:ext-tasklist:$markwon_version"

    //Mentions autocomplete
    implementation "com.otaliastudios:autocomplete:1.1.0"

    //Shake detection
    implementation 'com.squareup:seismic:1.0.3'

    //Worker
    def work_version = "2.8.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    //Coroutines
    def coroutines_version = "1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    //Log
    implementation 'com.jakewharton.timber:timber:5.0.1'

    //test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.work:work-testing:$work_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
}

if (getGradle().getStartParameter().getTaskRequests().toString().toLowerCase().contains("gplay")) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'
}