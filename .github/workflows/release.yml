name: Create Release on Tag

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag to create release for'
        required: true
        default: 'v1.0'

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

#      - name: Setup  signing
#        run: |
#          echo -n ${{ secrets.SIGNING_KEY_BASE64 }} | base64 -d > circuli_key.jks
#          echo "KEY_PATH=../circuli_key.jks" > signing.properties
#          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> signing.properties
#          echo "ALIAS_NAME=${{ secrets.ALIAS_NAME }}" >> signing.properties
#          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> signing.properties
#
#      - name: Build F-Droid apk
#        run: ./gradlew assembleFdroidRelease

      - name: Extract version_code
        id: extract_version_code
        run: |
          version_code=$(grep 'versionCode' buildSrc/src/main/java/AppConfig.kt | sed 's/[^0-9]*//g')
          echo "version_code: $version_code"
          echo "VERSION_CODE=$version_code" >> $GITHUB_ENV

      - name: Read changelog
        id: read_changelog
        run: |
          changelog_file="fastlane/metadata/android/en-US/changelogs/${{ env.VERSION_CODE }}01.txt"
          if [[ -f "$changelog_file" ]]; then
            changelog=$(cat "$changelog_file")
          else
            changelog="No changelog available."
          fi
          echo "changelog: $changelog"
          echo "CHANGELOG=$changelog" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name || github.ref }}
          release_name: Release ${{ github.event.inputs.tag_name || github.ref }}
          body: ${{ env.CHANGELOG }}
          draft: false
          prerelease: false

#      - name: Set APK path
#        id: set_apk_path
#        run: echo "APK_PATH=app/build/outputs/apk/release/circles-${{ github.event.inputs.tag_name || github.ref_name }}-fdroid-arm64-v8a-release.apk" >> $GITHUB_ENV
#
#      - name: Upload Release APK
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ${{ env.APK_PATH }}
#          asset_name: circles-${{ github.event.inputs.tag_name || github.ref_name }}-fdroid-arm64-v8a-release.apk
#          asset_content_type: application/vnd.android.package-archive
